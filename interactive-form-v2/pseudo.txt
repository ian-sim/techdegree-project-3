DISPLAYING APPROPRIATE COLORS BASED ON THE DESIGN THEME SELECTED - DYNAMIC APPROACH

create designOptions object
select options with value property under design id
iterate over options 
    select textContent and use slice() to remove 'Theme - '
    select value of options
    store value of option in object as key
    store trimmed textContent as value

create handler for 'change' in design select value
when value changes:
    if value = select Theme
        display 'please select theme' message
    else
    for each option in color dropdown
        if option.includes(object[design.value]) = true
            set hidden property = false;
        else 
            set hidden property = true; 

FUNCTIONALITY FOR CHECKBOXES IN ACTIVITIES SECTION
create total cost variable
create function for conflict check
create function for toggleDisabled()

set event listener on fieldset
    check if e.target has been selected or not
        if already selected 
            remove selected class 
            adjust total cost
            set disabled attr of any conflicting checkboxes to false
        else
            add cost to Total cost 
            apply selected class 
            check if other checkboxes conflict
            if conflicts
                set class of conflicting checkboxes to disabled
              

FORM VALIDATION
add event listener to submit button of mousedown..?
    if name input field is blank
        e.target.preventDefault()
    else if email field not formatted correctly
        e.target.preventDefault()
    else if no activities selected
        e.target.preventDefault()
    else if payment method is credit card
        if any of the inputs are empty
            e.target.preventDefault()
        else if card number is not between 13 and 16 designOptions
            e.target.preventDefault()
        else if zip code value is not 5 digits long
            e.target.preventDefault()
        else if CVV number is not exactly 3 digits long
            e.target.preventDefault()

VALIDATION AND ERROR COMBO
create function to insert label or p tag using insertBefore(). Use parentNode and nextElementSibling to get elements for insertBefore
create empty array for incorrect input fields
check value of each input field
    if input is not correct
        push array to array containing element selected and message specific for element at indices [0,1] 
        e.g inputErrorList.push([nameInput, 'Please enter your name.']);
